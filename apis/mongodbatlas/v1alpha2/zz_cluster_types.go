/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ClusterAdvancedConfigurationInitParameters struct {
	DefaultReadConcern *string `json:"defaultReadConcern,omitempty" tf:"default_read_concern,omitempty"`

	DefaultWriteConcern *string `json:"defaultWriteConcern,omitempty" tf:"default_write_concern,omitempty"`

	FailIndexKeyTooLong *bool `json:"failIndexKeyTooLong,omitempty" tf:"fail_index_key_too_long,omitempty"`

	JavascriptEnabled *bool `json:"javascriptEnabled,omitempty" tf:"javascript_enabled,omitempty"`

	MinimumEnabledTLSProtocol *string `json:"minimumEnabledTlsProtocol,omitempty" tf:"minimum_enabled_tls_protocol,omitempty"`

	NoTableScan *bool `json:"noTableScan,omitempty" tf:"no_table_scan,omitempty"`

	OplogMinRetentionHours *float64 `json:"oplogMinRetentionHours,omitempty" tf:"oplog_min_retention_hours,omitempty"`

	OplogSizeMb *float64 `json:"oplogSizeMb,omitempty" tf:"oplog_size_mb,omitempty"`

	SampleRefreshIntervalBiConnector *float64 `json:"sampleRefreshIntervalBiConnector,omitempty" tf:"sample_refresh_interval_bi_connector,omitempty"`

	SampleSizeBiConnector *float64 `json:"sampleSizeBiConnector,omitempty" tf:"sample_size_bi_connector,omitempty"`
}

type ClusterAdvancedConfigurationObservation struct {
	DefaultReadConcern *string `json:"defaultReadConcern,omitempty" tf:"default_read_concern,omitempty"`

	DefaultWriteConcern *string `json:"defaultWriteConcern,omitempty" tf:"default_write_concern,omitempty"`

	FailIndexKeyTooLong *bool `json:"failIndexKeyTooLong,omitempty" tf:"fail_index_key_too_long,omitempty"`

	JavascriptEnabled *bool `json:"javascriptEnabled,omitempty" tf:"javascript_enabled,omitempty"`

	MinimumEnabledTLSProtocol *string `json:"minimumEnabledTlsProtocol,omitempty" tf:"minimum_enabled_tls_protocol,omitempty"`

	NoTableScan *bool `json:"noTableScan,omitempty" tf:"no_table_scan,omitempty"`

	OplogMinRetentionHours *float64 `json:"oplogMinRetentionHours,omitempty" tf:"oplog_min_retention_hours,omitempty"`

	OplogSizeMb *float64 `json:"oplogSizeMb,omitempty" tf:"oplog_size_mb,omitempty"`

	SampleRefreshIntervalBiConnector *float64 `json:"sampleRefreshIntervalBiConnector,omitempty" tf:"sample_refresh_interval_bi_connector,omitempty"`

	SampleSizeBiConnector *float64 `json:"sampleSizeBiConnector,omitempty" tf:"sample_size_bi_connector,omitempty"`
}

type ClusterAdvancedConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	DefaultReadConcern *string `json:"defaultReadConcern,omitempty" tf:"default_read_concern,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultWriteConcern *string `json:"defaultWriteConcern,omitempty" tf:"default_write_concern,omitempty"`

	// +kubebuilder:validation:Optional
	FailIndexKeyTooLong *bool `json:"failIndexKeyTooLong,omitempty" tf:"fail_index_key_too_long,omitempty"`

	// +kubebuilder:validation:Optional
	JavascriptEnabled *bool `json:"javascriptEnabled,omitempty" tf:"javascript_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	MinimumEnabledTLSProtocol *string `json:"minimumEnabledTlsProtocol,omitempty" tf:"minimum_enabled_tls_protocol,omitempty"`

	// +kubebuilder:validation:Optional
	NoTableScan *bool `json:"noTableScan,omitempty" tf:"no_table_scan,omitempty"`

	// +kubebuilder:validation:Optional
	OplogMinRetentionHours *float64 `json:"oplogMinRetentionHours,omitempty" tf:"oplog_min_retention_hours,omitempty"`

	// +kubebuilder:validation:Optional
	OplogSizeMb *float64 `json:"oplogSizeMb,omitempty" tf:"oplog_size_mb,omitempty"`

	// +kubebuilder:validation:Optional
	SampleRefreshIntervalBiConnector *float64 `json:"sampleRefreshIntervalBiConnector,omitempty" tf:"sample_refresh_interval_bi_connector,omitempty"`

	// +kubebuilder:validation:Optional
	SampleSizeBiConnector *float64 `json:"sampleSizeBiConnector,omitempty" tf:"sample_size_bi_connector,omitempty"`
}

type ClusterBiConnectorConfigInitParameters struct {
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	ReadPreference *string `json:"readPreference,omitempty" tf:"read_preference,omitempty"`
}

type ClusterBiConnectorConfigObservation struct {
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	ReadPreference *string `json:"readPreference,omitempty" tf:"read_preference,omitempty"`
}

type ClusterBiConnectorConfigParameters struct {

	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Optional
	ReadPreference *string `json:"readPreference,omitempty" tf:"read_preference,omitempty"`
}

type ClusterConnectionStringsInitParameters struct {
}

type ClusterConnectionStringsObservation struct {

	// +mapType=granular
	AwsPrivateLink map[string]*string `json:"awsPrivateLink,omitempty" tf:"aws_private_link,omitempty"`

	// +mapType=granular
	AwsPrivateLinkSrv map[string]*string `json:"awsPrivateLinkSrv,omitempty" tf:"aws_private_link_srv,omitempty"`

	Private *string `json:"private,omitempty" tf:"private,omitempty"`

	PrivateEndpoint []ConnectionStringsPrivateEndpointObservation `json:"privateEndpoint,omitempty" tf:"private_endpoint,omitempty"`

	PrivateSrv *string `json:"privateSrv,omitempty" tf:"private_srv,omitempty"`

	Standard *string `json:"standard,omitempty" tf:"standard,omitempty"`

	StandardSrv *string `json:"standardSrv,omitempty" tf:"standard_srv,omitempty"`
}

type ClusterConnectionStringsParameters struct {
}

type ClusterInitParameters struct {
	AdvancedConfiguration []ClusterAdvancedConfigurationInitParameters `json:"advancedConfiguration,omitempty" tf:"advanced_configuration,omitempty"`

	AutoScalingComputeEnabled *bool `json:"autoScalingComputeEnabled,omitempty" tf:"auto_scaling_compute_enabled,omitempty"`

	AutoScalingComputeScaleDownEnabled *bool `json:"autoScalingComputeScaleDownEnabled,omitempty" tf:"auto_scaling_compute_scale_down_enabled,omitempty"`

	AutoScalingDiskGbEnabled *bool `json:"autoScalingDiskGbEnabled,omitempty" tf:"auto_scaling_disk_gb_enabled,omitempty"`

	BackingProviderName *string `json:"backingProviderName,omitempty" tf:"backing_provider_name,omitempty"`

	// Clusters running MongoDB FCV 4.2 or later and any new Atlas clusters of any type do not support this parameter
	BackupEnabled *bool `json:"backupEnabled,omitempty" tf:"backup_enabled,omitempty"`

	// +mapType=granular
	BiConnector map[string]*string `json:"biConnector,omitempty" tf:"bi_connector,omitempty"`

	BiConnectorConfig []ClusterBiConnectorConfigInitParameters `json:"biConnectorConfig,omitempty" tf:"bi_connector_config,omitempty"`

	CloudBackup *bool `json:"cloudBackup,omitempty" tf:"cloud_backup,omitempty"`

	ClusterType *string `json:"clusterType,omitempty" tf:"cluster_type,omitempty"`

	DiskSizeGb *float64 `json:"diskSizeGb,omitempty" tf:"disk_size_gb,omitempty"`

	EncryptionAtRestProvider *string `json:"encryptionAtRestProvider,omitempty" tf:"encryption_at_rest_provider,omitempty"`

	Labels []ClusterLabelsInitParameters `json:"labels,omitempty" tf:"labels,omitempty"`

	MongoDBMajorVersion *string `json:"mongoDbMajorVersion,omitempty" tf:"mongo_db_major_version,omitempty"`

	NumShards *float64 `json:"numShards,omitempty" tf:"num_shards,omitempty"`

	Paused *bool `json:"paused,omitempty" tf:"paused,omitempty"`

	PitEnabled *bool `json:"pitEnabled,omitempty" tf:"pit_enabled,omitempty"`

	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-mongodbatlas/apis/mongodbatlas/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-mongodbatlas/config/common.ExtractResourceID()
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in mongodbatlas to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in mongodbatlas to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	ProviderAutoScalingComputeMaxInstanceSize *string `json:"providerAutoScalingComputeMaxInstanceSize,omitempty" tf:"provider_auto_scaling_compute_max_instance_size,omitempty"`

	ProviderAutoScalingComputeMinInstanceSize *string `json:"providerAutoScalingComputeMinInstanceSize,omitempty" tf:"provider_auto_scaling_compute_min_instance_size,omitempty"`

	ProviderBackupEnabled *bool `json:"providerBackupEnabled,omitempty" tf:"provider_backup_enabled,omitempty"`

	ProviderDiskIops *float64 `json:"providerDiskIops,omitempty" tf:"provider_disk_iops,omitempty"`

	ProviderDiskTypeName *string `json:"providerDiskTypeName,omitempty" tf:"provider_disk_type_name,omitempty"`

	ProviderEncryptEBSVolume *bool `json:"providerEncryptEbsVolume,omitempty" tf:"provider_encrypt_ebs_volume,omitempty"`

	ProviderInstanceSizeName *string `json:"providerInstanceSizeName,omitempty" tf:"provider_instance_size_name,omitempty"`

	ProviderName *string `json:"providerName,omitempty" tf:"provider_name,omitempty"`

	ProviderRegionName *string `json:"providerRegionName,omitempty" tf:"provider_region_name,omitempty"`

	ProviderVolumeType *string `json:"providerVolumeType,omitempty" tf:"provider_volume_type,omitempty"`

	ReplicationFactor *float64 `json:"replicationFactor,omitempty" tf:"replication_factor,omitempty"`

	ReplicationSpecs []ClusterReplicationSpecsInitParameters `json:"replicationSpecs,omitempty" tf:"replication_specs,omitempty"`

	TerminationProtectionEnabled *bool `json:"terminationProtectionEnabled,omitempty" tf:"termination_protection_enabled,omitempty"`

	VersionReleaseSystem *string `json:"versionReleaseSystem,omitempty" tf:"version_release_system,omitempty"`
}

type ClusterLabelsInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ClusterLabelsObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ClusterLabelsParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ClusterObservation struct {
	AdvancedConfiguration []ClusterAdvancedConfigurationObservation `json:"advancedConfiguration,omitempty" tf:"advanced_configuration,omitempty"`

	AutoScalingComputeEnabled *bool `json:"autoScalingComputeEnabled,omitempty" tf:"auto_scaling_compute_enabled,omitempty"`

	AutoScalingComputeScaleDownEnabled *bool `json:"autoScalingComputeScaleDownEnabled,omitempty" tf:"auto_scaling_compute_scale_down_enabled,omitempty"`

	AutoScalingDiskGbEnabled *bool `json:"autoScalingDiskGbEnabled,omitempty" tf:"auto_scaling_disk_gb_enabled,omitempty"`

	BackingProviderName *string `json:"backingProviderName,omitempty" tf:"backing_provider_name,omitempty"`

	// Clusters running MongoDB FCV 4.2 or later and any new Atlas clusters of any type do not support this parameter
	BackupEnabled *bool `json:"backupEnabled,omitempty" tf:"backup_enabled,omitempty"`

	// +mapType=granular
	BiConnector map[string]*string `json:"biConnector,omitempty" tf:"bi_connector,omitempty"`

	BiConnectorConfig []ClusterBiConnectorConfigObservation `json:"biConnectorConfig,omitempty" tf:"bi_connector_config,omitempty"`

	CloudBackup *bool `json:"cloudBackup,omitempty" tf:"cloud_backup,omitempty"`

	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	ClusterType *string `json:"clusterType,omitempty" tf:"cluster_type,omitempty"`

	ConnectionStrings []ClusterConnectionStringsObservation `json:"connectionStrings,omitempty" tf:"connection_strings,omitempty"`

	ContainerID *string `json:"containerId,omitempty" tf:"container_id,omitempty"`

	DiskSizeGb *float64 `json:"diskSizeGb,omitempty" tf:"disk_size_gb,omitempty"`

	EncryptionAtRestProvider *string `json:"encryptionAtRestProvider,omitempty" tf:"encryption_at_rest_provider,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Labels []ClusterLabelsObservation `json:"labels,omitempty" tf:"labels,omitempty"`

	MongoDBMajorVersion *string `json:"mongoDbMajorVersion,omitempty" tf:"mongo_db_major_version,omitempty"`

	MongoDBVersion *string `json:"mongoDbVersion,omitempty" tf:"mongo_db_version,omitempty"`

	MongoURI *string `json:"mongoUri,omitempty" tf:"mongo_uri,omitempty"`

	MongoURIUpdated *string `json:"mongoUriUpdated,omitempty" tf:"mongo_uri_updated,omitempty"`

	MongoURIWithOptions *string `json:"mongoUriWithOptions,omitempty" tf:"mongo_uri_with_options,omitempty"`

	NumShards *float64 `json:"numShards,omitempty" tf:"num_shards,omitempty"`

	Paused *bool `json:"paused,omitempty" tf:"paused,omitempty"`

	PitEnabled *bool `json:"pitEnabled,omitempty" tf:"pit_enabled,omitempty"`

	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	ProviderAutoScalingComputeMaxInstanceSize *string `json:"providerAutoScalingComputeMaxInstanceSize,omitempty" tf:"provider_auto_scaling_compute_max_instance_size,omitempty"`

	ProviderAutoScalingComputeMinInstanceSize *string `json:"providerAutoScalingComputeMinInstanceSize,omitempty" tf:"provider_auto_scaling_compute_min_instance_size,omitempty"`

	ProviderBackupEnabled *bool `json:"providerBackupEnabled,omitempty" tf:"provider_backup_enabled,omitempty"`

	ProviderDiskIops *float64 `json:"providerDiskIops,omitempty" tf:"provider_disk_iops,omitempty"`

	ProviderDiskTypeName *string `json:"providerDiskTypeName,omitempty" tf:"provider_disk_type_name,omitempty"`

	ProviderEncryptEBSVolume *bool `json:"providerEncryptEbsVolume,omitempty" tf:"provider_encrypt_ebs_volume,omitempty"`

	ProviderEncryptEBSVolumeFlag *bool `json:"providerEncryptEbsVolumeFlag,omitempty" tf:"provider_encrypt_ebs_volume_flag,omitempty"`

	ProviderInstanceSizeName *string `json:"providerInstanceSizeName,omitempty" tf:"provider_instance_size_name,omitempty"`

	ProviderName *string `json:"providerName,omitempty" tf:"provider_name,omitempty"`

	ProviderRegionName *string `json:"providerRegionName,omitempty" tf:"provider_region_name,omitempty"`

	ProviderVolumeType *string `json:"providerVolumeType,omitempty" tf:"provider_volume_type,omitempty"`

	ReplicationFactor *float64 `json:"replicationFactor,omitempty" tf:"replication_factor,omitempty"`

	ReplicationSpecs []ClusterReplicationSpecsObservation `json:"replicationSpecs,omitempty" tf:"replication_specs,omitempty"`

	SnapshotBackupPolicy []SnapshotBackupPolicyObservation `json:"snapshotBackupPolicy,omitempty" tf:"snapshot_backup_policy,omitempty"`

	SrvAddress *string `json:"srvAddress,omitempty" tf:"srv_address,omitempty"`

	StateName *string `json:"stateName,omitempty" tf:"state_name,omitempty"`

	TerminationProtectionEnabled *bool `json:"terminationProtectionEnabled,omitempty" tf:"termination_protection_enabled,omitempty"`

	VersionReleaseSystem *string `json:"versionReleaseSystem,omitempty" tf:"version_release_system,omitempty"`
}

type ClusterParameters struct {

	// +kubebuilder:validation:Optional
	AdvancedConfiguration []ClusterAdvancedConfigurationParameters `json:"advancedConfiguration,omitempty" tf:"advanced_configuration,omitempty"`

	// +kubebuilder:validation:Optional
	AutoScalingComputeEnabled *bool `json:"autoScalingComputeEnabled,omitempty" tf:"auto_scaling_compute_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	AutoScalingComputeScaleDownEnabled *bool `json:"autoScalingComputeScaleDownEnabled,omitempty" tf:"auto_scaling_compute_scale_down_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	AutoScalingDiskGbEnabled *bool `json:"autoScalingDiskGbEnabled,omitempty" tf:"auto_scaling_disk_gb_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	BackingProviderName *string `json:"backingProviderName,omitempty" tf:"backing_provider_name,omitempty"`

	// Clusters running MongoDB FCV 4.2 or later and any new Atlas clusters of any type do not support this parameter
	// +kubebuilder:validation:Optional
	BackupEnabled *bool `json:"backupEnabled,omitempty" tf:"backup_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	BiConnector map[string]*string `json:"biConnector,omitempty" tf:"bi_connector,omitempty"`

	// +kubebuilder:validation:Optional
	BiConnectorConfig []ClusterBiConnectorConfigParameters `json:"biConnectorConfig,omitempty" tf:"bi_connector_config,omitempty"`

	// +kubebuilder:validation:Optional
	CloudBackup *bool `json:"cloudBackup,omitempty" tf:"cloud_backup,omitempty"`

	// +kubebuilder:validation:Optional
	ClusterType *string `json:"clusterType,omitempty" tf:"cluster_type,omitempty"`

	// +kubebuilder:validation:Optional
	DiskSizeGb *float64 `json:"diskSizeGb,omitempty" tf:"disk_size_gb,omitempty"`

	// +kubebuilder:validation:Optional
	EncryptionAtRestProvider *string `json:"encryptionAtRestProvider,omitempty" tf:"encryption_at_rest_provider,omitempty"`

	// +kubebuilder:validation:Optional
	Labels []ClusterLabelsParameters `json:"labels,omitempty" tf:"labels,omitempty"`

	// +kubebuilder:validation:Optional
	MongoDBMajorVersion *string `json:"mongoDbMajorVersion,omitempty" tf:"mongo_db_major_version,omitempty"`

	// +kubebuilder:validation:Optional
	NumShards *float64 `json:"numShards,omitempty" tf:"num_shards,omitempty"`

	// +kubebuilder:validation:Optional
	Paused *bool `json:"paused,omitempty" tf:"paused,omitempty"`

	// +kubebuilder:validation:Optional
	PitEnabled *bool `json:"pitEnabled,omitempty" tf:"pit_enabled,omitempty"`

	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-mongodbatlas/apis/mongodbatlas/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-mongodbatlas/config/common.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in mongodbatlas to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in mongodbatlas to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	ProviderAutoScalingComputeMaxInstanceSize *string `json:"providerAutoScalingComputeMaxInstanceSize,omitempty" tf:"provider_auto_scaling_compute_max_instance_size,omitempty"`

	// +kubebuilder:validation:Optional
	ProviderAutoScalingComputeMinInstanceSize *string `json:"providerAutoScalingComputeMinInstanceSize,omitempty" tf:"provider_auto_scaling_compute_min_instance_size,omitempty"`

	// +kubebuilder:validation:Optional
	ProviderBackupEnabled *bool `json:"providerBackupEnabled,omitempty" tf:"provider_backup_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	ProviderDiskIops *float64 `json:"providerDiskIops,omitempty" tf:"provider_disk_iops,omitempty"`

	// +kubebuilder:validation:Optional
	ProviderDiskTypeName *string `json:"providerDiskTypeName,omitempty" tf:"provider_disk_type_name,omitempty"`

	// +kubebuilder:validation:Optional
	ProviderEncryptEBSVolume *bool `json:"providerEncryptEbsVolume,omitempty" tf:"provider_encrypt_ebs_volume,omitempty"`

	// +kubebuilder:validation:Optional
	ProviderInstanceSizeName *string `json:"providerInstanceSizeName,omitempty" tf:"provider_instance_size_name,omitempty"`

	// +kubebuilder:validation:Optional
	ProviderName *string `json:"providerName,omitempty" tf:"provider_name,omitempty"`

	// +kubebuilder:validation:Optional
	ProviderRegionName *string `json:"providerRegionName,omitempty" tf:"provider_region_name,omitempty"`

	// +kubebuilder:validation:Optional
	ProviderVolumeType *string `json:"providerVolumeType,omitempty" tf:"provider_volume_type,omitempty"`

	// +kubebuilder:validation:Optional
	ReplicationFactor *float64 `json:"replicationFactor,omitempty" tf:"replication_factor,omitempty"`

	// +kubebuilder:validation:Optional
	ReplicationSpecs []ClusterReplicationSpecsParameters `json:"replicationSpecs,omitempty" tf:"replication_specs,omitempty"`

	// +kubebuilder:validation:Optional
	TerminationProtectionEnabled *bool `json:"terminationProtectionEnabled,omitempty" tf:"termination_protection_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	VersionReleaseSystem *string `json:"versionReleaseSystem,omitempty" tf:"version_release_system,omitempty"`
}

type ClusterReplicationSpecsInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	NumShards *float64 `json:"numShards,omitempty" tf:"num_shards,omitempty"`

	RegionsConfig []RegionsConfigInitParameters `json:"regionsConfig,omitempty" tf:"regions_config,omitempty"`

	ZoneName *string `json:"zoneName,omitempty" tf:"zone_name,omitempty"`
}

type ClusterReplicationSpecsObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	NumShards *float64 `json:"numShards,omitempty" tf:"num_shards,omitempty"`

	RegionsConfig []RegionsConfigObservation `json:"regionsConfig,omitempty" tf:"regions_config,omitempty"`

	ZoneName *string `json:"zoneName,omitempty" tf:"zone_name,omitempty"`
}

type ClusterReplicationSpecsParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// +kubebuilder:validation:Optional
	NumShards *float64 `json:"numShards" tf:"num_shards,omitempty"`

	// +kubebuilder:validation:Optional
	RegionsConfig []RegionsConfigParameters `json:"regionsConfig,omitempty" tf:"regions_config,omitempty"`

	// +kubebuilder:validation:Optional
	ZoneName *string `json:"zoneName,omitempty" tf:"zone_name,omitempty"`
}

type ConnectionStringsPrivateEndpointInitParameters struct {
}

type ConnectionStringsPrivateEndpointObservation struct {
	ConnectionString *string `json:"connectionString,omitempty" tf:"connection_string,omitempty"`

	Endpoints []PrivateEndpointEndpointsObservation `json:"endpoints,omitempty" tf:"endpoints,omitempty"`

	SrvConnectionString *string `json:"srvConnectionString,omitempty" tf:"srv_connection_string,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ConnectionStringsPrivateEndpointParameters struct {
}

type PoliciesInitParameters struct {
}

type PoliciesObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	PolicyItem []PolicyItemObservation `json:"policyItem,omitempty" tf:"policy_item,omitempty"`
}

type PoliciesParameters struct {
}

type PolicyItemInitParameters struct {
}

type PolicyItemObservation struct {
	FrequencyInterval *float64 `json:"frequencyInterval,omitempty" tf:"frequency_interval,omitempty"`

	FrequencyType *string `json:"frequencyType,omitempty" tf:"frequency_type,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	RetentionUnit *string `json:"retentionUnit,omitempty" tf:"retention_unit,omitempty"`

	RetentionValue *float64 `json:"retentionValue,omitempty" tf:"retention_value,omitempty"`
}

type PolicyItemParameters struct {
}

type PrivateEndpointEndpointsInitParameters struct {
}

type PrivateEndpointEndpointsObservation struct {
	EndpointID *string `json:"endpointId,omitempty" tf:"endpoint_id,omitempty"`

	ProviderName *string `json:"providerName,omitempty" tf:"provider_name,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type PrivateEndpointEndpointsParameters struct {
}

type RegionsConfigInitParameters struct {
	AnalyticsNodes *float64 `json:"analyticsNodes,omitempty" tf:"analytics_nodes,omitempty"`

	ElectableNodes *float64 `json:"electableNodes,omitempty" tf:"electable_nodes,omitempty"`

	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	ReadOnlyNodes *float64 `json:"readOnlyNodes,omitempty" tf:"read_only_nodes,omitempty"`

	RegionName *string `json:"regionName,omitempty" tf:"region_name,omitempty"`
}

type RegionsConfigObservation struct {
	AnalyticsNodes *float64 `json:"analyticsNodes,omitempty" tf:"analytics_nodes,omitempty"`

	ElectableNodes *float64 `json:"electableNodes,omitempty" tf:"electable_nodes,omitempty"`

	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	ReadOnlyNodes *float64 `json:"readOnlyNodes,omitempty" tf:"read_only_nodes,omitempty"`

	RegionName *string `json:"regionName,omitempty" tf:"region_name,omitempty"`
}

type RegionsConfigParameters struct {

	// +kubebuilder:validation:Optional
	AnalyticsNodes *float64 `json:"analyticsNodes,omitempty" tf:"analytics_nodes,omitempty"`

	// +kubebuilder:validation:Optional
	ElectableNodes *float64 `json:"electableNodes,omitempty" tf:"electable_nodes,omitempty"`

	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// +kubebuilder:validation:Optional
	ReadOnlyNodes *float64 `json:"readOnlyNodes,omitempty" tf:"read_only_nodes,omitempty"`

	// +kubebuilder:validation:Optional
	RegionName *string `json:"regionName" tf:"region_name,omitempty"`
}

type SnapshotBackupPolicyInitParameters struct {
}

type SnapshotBackupPolicyObservation struct {
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	NextSnapshot *string `json:"nextSnapshot,omitempty" tf:"next_snapshot,omitempty"`

	Policies []PoliciesObservation `json:"policies,omitempty" tf:"policies,omitempty"`

	ReferenceHourOfDay *float64 `json:"referenceHourOfDay,omitempty" tf:"reference_hour_of_day,omitempty"`

	ReferenceMinuteOfHour *float64 `json:"referenceMinuteOfHour,omitempty" tf:"reference_minute_of_hour,omitempty"`

	RestoreWindowDays *float64 `json:"restoreWindowDays,omitempty" tf:"restore_window_days,omitempty"`

	UpdateSnapshots *bool `json:"updateSnapshots,omitempty" tf:"update_snapshots,omitempty"`
}

type SnapshotBackupPolicyParameters struct {
}

// ClusterSpec defines the desired state of Cluster
type ClusterSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ClusterParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ClusterInitParameters `json:"initProvider,omitempty"`
}

// ClusterStatus defines the observed state of Cluster.
type ClusterStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ClusterObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Cluster is the Schema for the Clusters API. <no value>
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,mongodbatlas}
type Cluster struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.providerInstanceSizeName) || (has(self.initProvider) && has(self.initProvider.providerInstanceSizeName))",message="spec.forProvider.providerInstanceSizeName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.providerName) || (has(self.initProvider) && has(self.initProvider.providerName))",message="spec.forProvider.providerName is a required parameter"
	Spec   ClusterSpec   `json:"spec"`
	Status ClusterStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ClusterList contains a list of Clusters
type ClusterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Cluster `json:"items"`
}

// Repository type metadata.
var (
	Cluster_Kind             = "Cluster"
	Cluster_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Cluster_Kind}.String()
	Cluster_KindAPIVersion   = Cluster_Kind + "." + CRDGroupVersion.String()
	Cluster_GroupVersionKind = CRDGroupVersion.WithKind(Cluster_Kind)
)

func init() {
	SchemeBuilder.Register(&Cluster{}, &ClusterList{})
}
