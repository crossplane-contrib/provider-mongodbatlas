//go:build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha2

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedCluster) DeepCopyInto(out *AdvancedCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedCluster.
func (in *AdvancedCluster) DeepCopy() *AdvancedCluster {
	if in == nil {
		return nil
	}
	out := new(AdvancedCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AdvancedCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedClusterInitParameters) DeepCopyInto(out *AdvancedClusterInitParameters) {
	*out = *in
	if in.AdvancedConfiguration != nil {
		in, out := &in.AdvancedConfiguration, &out.AdvancedConfiguration
		*out = make([]AdvancedConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackupEnabled != nil {
		in, out := &in.BackupEnabled, &out.BackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BiConnector != nil {
		in, out := &in.BiConnector, &out.BiConnector
		*out = make([]BiConnectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BiConnectorConfig != nil {
		in, out := &in.BiConnectorConfig, &out.BiConnectorConfig
		*out = make([]BiConnectorConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterType != nil {
		in, out := &in.ClusterType, &out.ClusterType
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EncryptionAtRestProvider != nil {
		in, out := &in.EncryptionAtRestProvider, &out.EncryptionAtRestProvider
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]LabelsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoDBMajorVersion != nil {
		in, out := &in.MongoDBMajorVersion, &out.MongoDBMajorVersion
		*out = new(string)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.PitEnabled != nil {
		in, out := &in.PitEnabled, &out.PitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ReplicationSpecs != nil {
		in, out := &in.ReplicationSpecs, &out.ReplicationSpecs
		*out = make([]ReplicationSpecsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootCertType != nil {
		in, out := &in.RootCertType, &out.RootCertType
		*out = new(string)
		**out = **in
	}
	if in.TerminationProtectionEnabled != nil {
		in, out := &in.TerminationProtectionEnabled, &out.TerminationProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.VersionReleaseSystem != nil {
		in, out := &in.VersionReleaseSystem, &out.VersionReleaseSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedClusterInitParameters.
func (in *AdvancedClusterInitParameters) DeepCopy() *AdvancedClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedClusterList) DeepCopyInto(out *AdvancedClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AdvancedCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedClusterList.
func (in *AdvancedClusterList) DeepCopy() *AdvancedClusterList {
	if in == nil {
		return nil
	}
	out := new(AdvancedClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AdvancedClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedClusterObservation) DeepCopyInto(out *AdvancedClusterObservation) {
	*out = *in
	if in.AdvancedConfiguration != nil {
		in, out := &in.AdvancedConfiguration, &out.AdvancedConfiguration
		*out = make([]AdvancedConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackupEnabled != nil {
		in, out := &in.BackupEnabled, &out.BackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BiConnector != nil {
		in, out := &in.BiConnector, &out.BiConnector
		*out = make([]BiConnectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BiConnectorConfig != nil {
		in, out := &in.BiConnectorConfig, &out.BiConnectorConfig
		*out = make([]BiConnectorConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterType != nil {
		in, out := &in.ClusterType, &out.ClusterType
		*out = new(string)
		**out = **in
	}
	if in.ConnectionStrings != nil {
		in, out := &in.ConnectionStrings, &out.ConnectionStrings
		*out = make([]ConnectionStringsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateDate != nil {
		in, out := &in.CreateDate, &out.CreateDate
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EncryptionAtRestProvider != nil {
		in, out := &in.EncryptionAtRestProvider, &out.EncryptionAtRestProvider
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]LabelsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoDBMajorVersion != nil {
		in, out := &in.MongoDBMajorVersion, &out.MongoDBMajorVersion
		*out = new(string)
		**out = **in
	}
	if in.MongoDBVersion != nil {
		in, out := &in.MongoDBVersion, &out.MongoDBVersion
		*out = new(string)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.PitEnabled != nil {
		in, out := &in.PitEnabled, &out.PitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ReplicationSpecs != nil {
		in, out := &in.ReplicationSpecs, &out.ReplicationSpecs
		*out = make([]ReplicationSpecsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootCertType != nil {
		in, out := &in.RootCertType, &out.RootCertType
		*out = new(string)
		**out = **in
	}
	if in.StateName != nil {
		in, out := &in.StateName, &out.StateName
		*out = new(string)
		**out = **in
	}
	if in.TerminationProtectionEnabled != nil {
		in, out := &in.TerminationProtectionEnabled, &out.TerminationProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.VersionReleaseSystem != nil {
		in, out := &in.VersionReleaseSystem, &out.VersionReleaseSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedClusterObservation.
func (in *AdvancedClusterObservation) DeepCopy() *AdvancedClusterObservation {
	if in == nil {
		return nil
	}
	out := new(AdvancedClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedClusterParameters) DeepCopyInto(out *AdvancedClusterParameters) {
	*out = *in
	if in.AdvancedConfiguration != nil {
		in, out := &in.AdvancedConfiguration, &out.AdvancedConfiguration
		*out = make([]AdvancedConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackupEnabled != nil {
		in, out := &in.BackupEnabled, &out.BackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BiConnector != nil {
		in, out := &in.BiConnector, &out.BiConnector
		*out = make([]BiConnectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BiConnectorConfig != nil {
		in, out := &in.BiConnectorConfig, &out.BiConnectorConfig
		*out = make([]BiConnectorConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterType != nil {
		in, out := &in.ClusterType, &out.ClusterType
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EncryptionAtRestProvider != nil {
		in, out := &in.EncryptionAtRestProvider, &out.EncryptionAtRestProvider
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]LabelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoDBMajorVersion != nil {
		in, out := &in.MongoDBMajorVersion, &out.MongoDBMajorVersion
		*out = new(string)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.PitEnabled != nil {
		in, out := &in.PitEnabled, &out.PitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ReplicationSpecs != nil {
		in, out := &in.ReplicationSpecs, &out.ReplicationSpecs
		*out = make([]ReplicationSpecsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootCertType != nil {
		in, out := &in.RootCertType, &out.RootCertType
		*out = new(string)
		**out = **in
	}
	if in.TerminationProtectionEnabled != nil {
		in, out := &in.TerminationProtectionEnabled, &out.TerminationProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.VersionReleaseSystem != nil {
		in, out := &in.VersionReleaseSystem, &out.VersionReleaseSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedClusterParameters.
func (in *AdvancedClusterParameters) DeepCopy() *AdvancedClusterParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedClusterSpec) DeepCopyInto(out *AdvancedClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedClusterSpec.
func (in *AdvancedClusterSpec) DeepCopy() *AdvancedClusterSpec {
	if in == nil {
		return nil
	}
	out := new(AdvancedClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedClusterStatus) DeepCopyInto(out *AdvancedClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedClusterStatus.
func (in *AdvancedClusterStatus) DeepCopy() *AdvancedClusterStatus {
	if in == nil {
		return nil
	}
	out := new(AdvancedClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedConfigurationInitParameters) DeepCopyInto(out *AdvancedConfigurationInitParameters) {
	*out = *in
	if in.DefaultReadConcern != nil {
		in, out := &in.DefaultReadConcern, &out.DefaultReadConcern
		*out = new(string)
		**out = **in
	}
	if in.DefaultWriteConcern != nil {
		in, out := &in.DefaultWriteConcern, &out.DefaultWriteConcern
		*out = new(string)
		**out = **in
	}
	if in.FailIndexKeyTooLong != nil {
		in, out := &in.FailIndexKeyTooLong, &out.FailIndexKeyTooLong
		*out = new(bool)
		**out = **in
	}
	if in.JavascriptEnabled != nil {
		in, out := &in.JavascriptEnabled, &out.JavascriptEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MinimumEnabledTLSProtocol != nil {
		in, out := &in.MinimumEnabledTLSProtocol, &out.MinimumEnabledTLSProtocol
		*out = new(string)
		**out = **in
	}
	if in.NoTableScan != nil {
		in, out := &in.NoTableScan, &out.NoTableScan
		*out = new(bool)
		**out = **in
	}
	if in.OplogMinRetentionHours != nil {
		in, out := &in.OplogMinRetentionHours, &out.OplogMinRetentionHours
		*out = new(float64)
		**out = **in
	}
	if in.OplogSizeMb != nil {
		in, out := &in.OplogSizeMb, &out.OplogSizeMb
		*out = new(float64)
		**out = **in
	}
	if in.SampleRefreshIntervalBiConnector != nil {
		in, out := &in.SampleRefreshIntervalBiConnector, &out.SampleRefreshIntervalBiConnector
		*out = new(float64)
		**out = **in
	}
	if in.SampleSizeBiConnector != nil {
		in, out := &in.SampleSizeBiConnector, &out.SampleSizeBiConnector
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedConfigurationInitParameters.
func (in *AdvancedConfigurationInitParameters) DeepCopy() *AdvancedConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedConfigurationObservation) DeepCopyInto(out *AdvancedConfigurationObservation) {
	*out = *in
	if in.DefaultReadConcern != nil {
		in, out := &in.DefaultReadConcern, &out.DefaultReadConcern
		*out = new(string)
		**out = **in
	}
	if in.DefaultWriteConcern != nil {
		in, out := &in.DefaultWriteConcern, &out.DefaultWriteConcern
		*out = new(string)
		**out = **in
	}
	if in.FailIndexKeyTooLong != nil {
		in, out := &in.FailIndexKeyTooLong, &out.FailIndexKeyTooLong
		*out = new(bool)
		**out = **in
	}
	if in.JavascriptEnabled != nil {
		in, out := &in.JavascriptEnabled, &out.JavascriptEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MinimumEnabledTLSProtocol != nil {
		in, out := &in.MinimumEnabledTLSProtocol, &out.MinimumEnabledTLSProtocol
		*out = new(string)
		**out = **in
	}
	if in.NoTableScan != nil {
		in, out := &in.NoTableScan, &out.NoTableScan
		*out = new(bool)
		**out = **in
	}
	if in.OplogMinRetentionHours != nil {
		in, out := &in.OplogMinRetentionHours, &out.OplogMinRetentionHours
		*out = new(float64)
		**out = **in
	}
	if in.OplogSizeMb != nil {
		in, out := &in.OplogSizeMb, &out.OplogSizeMb
		*out = new(float64)
		**out = **in
	}
	if in.SampleRefreshIntervalBiConnector != nil {
		in, out := &in.SampleRefreshIntervalBiConnector, &out.SampleRefreshIntervalBiConnector
		*out = new(float64)
		**out = **in
	}
	if in.SampleSizeBiConnector != nil {
		in, out := &in.SampleSizeBiConnector, &out.SampleSizeBiConnector
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedConfigurationObservation.
func (in *AdvancedConfigurationObservation) DeepCopy() *AdvancedConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(AdvancedConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedConfigurationParameters) DeepCopyInto(out *AdvancedConfigurationParameters) {
	*out = *in
	if in.DefaultReadConcern != nil {
		in, out := &in.DefaultReadConcern, &out.DefaultReadConcern
		*out = new(string)
		**out = **in
	}
	if in.DefaultWriteConcern != nil {
		in, out := &in.DefaultWriteConcern, &out.DefaultWriteConcern
		*out = new(string)
		**out = **in
	}
	if in.FailIndexKeyTooLong != nil {
		in, out := &in.FailIndexKeyTooLong, &out.FailIndexKeyTooLong
		*out = new(bool)
		**out = **in
	}
	if in.JavascriptEnabled != nil {
		in, out := &in.JavascriptEnabled, &out.JavascriptEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MinimumEnabledTLSProtocol != nil {
		in, out := &in.MinimumEnabledTLSProtocol, &out.MinimumEnabledTLSProtocol
		*out = new(string)
		**out = **in
	}
	if in.NoTableScan != nil {
		in, out := &in.NoTableScan, &out.NoTableScan
		*out = new(bool)
		**out = **in
	}
	if in.OplogMinRetentionHours != nil {
		in, out := &in.OplogMinRetentionHours, &out.OplogMinRetentionHours
		*out = new(float64)
		**out = **in
	}
	if in.OplogSizeMb != nil {
		in, out := &in.OplogSizeMb, &out.OplogSizeMb
		*out = new(float64)
		**out = **in
	}
	if in.SampleRefreshIntervalBiConnector != nil {
		in, out := &in.SampleRefreshIntervalBiConnector, &out.SampleRefreshIntervalBiConnector
		*out = new(float64)
		**out = **in
	}
	if in.SampleSizeBiConnector != nil {
		in, out := &in.SampleSizeBiConnector, &out.SampleSizeBiConnector
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedConfigurationParameters.
func (in *AdvancedConfigurationParameters) DeepCopy() *AdvancedConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsAutoScalingInitParameters) DeepCopyInto(out *AnalyticsAutoScalingInitParameters) {
	*out = *in
	if in.ComputeEnabled != nil {
		in, out := &in.ComputeEnabled, &out.ComputeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ComputeMaxInstanceSize != nil {
		in, out := &in.ComputeMaxInstanceSize, &out.ComputeMaxInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ComputeMinInstanceSize != nil {
		in, out := &in.ComputeMinInstanceSize, &out.ComputeMinInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ComputeScaleDownEnabled != nil {
		in, out := &in.ComputeScaleDownEnabled, &out.ComputeScaleDownEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DiskGbEnabled != nil {
		in, out := &in.DiskGbEnabled, &out.DiskGbEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsAutoScalingInitParameters.
func (in *AnalyticsAutoScalingInitParameters) DeepCopy() *AnalyticsAutoScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticsAutoScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsAutoScalingObservation) DeepCopyInto(out *AnalyticsAutoScalingObservation) {
	*out = *in
	if in.ComputeEnabled != nil {
		in, out := &in.ComputeEnabled, &out.ComputeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ComputeMaxInstanceSize != nil {
		in, out := &in.ComputeMaxInstanceSize, &out.ComputeMaxInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ComputeMinInstanceSize != nil {
		in, out := &in.ComputeMinInstanceSize, &out.ComputeMinInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ComputeScaleDownEnabled != nil {
		in, out := &in.ComputeScaleDownEnabled, &out.ComputeScaleDownEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DiskGbEnabled != nil {
		in, out := &in.DiskGbEnabled, &out.DiskGbEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsAutoScalingObservation.
func (in *AnalyticsAutoScalingObservation) DeepCopy() *AnalyticsAutoScalingObservation {
	if in == nil {
		return nil
	}
	out := new(AnalyticsAutoScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsAutoScalingParameters) DeepCopyInto(out *AnalyticsAutoScalingParameters) {
	*out = *in
	if in.ComputeEnabled != nil {
		in, out := &in.ComputeEnabled, &out.ComputeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ComputeMaxInstanceSize != nil {
		in, out := &in.ComputeMaxInstanceSize, &out.ComputeMaxInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ComputeMinInstanceSize != nil {
		in, out := &in.ComputeMinInstanceSize, &out.ComputeMinInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ComputeScaleDownEnabled != nil {
		in, out := &in.ComputeScaleDownEnabled, &out.ComputeScaleDownEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DiskGbEnabled != nil {
		in, out := &in.DiskGbEnabled, &out.DiskGbEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsAutoScalingParameters.
func (in *AnalyticsAutoScalingParameters) DeepCopy() *AnalyticsAutoScalingParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticsAutoScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsSpecsInitParameters) DeepCopyInto(out *AnalyticsSpecsInitParameters) {
	*out = *in
	if in.DiskIops != nil {
		in, out := &in.DiskIops, &out.DiskIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.InstanceSize != nil {
		in, out := &in.InstanceSize, &out.InstanceSize
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsSpecsInitParameters.
func (in *AnalyticsSpecsInitParameters) DeepCopy() *AnalyticsSpecsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticsSpecsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsSpecsObservation) DeepCopyInto(out *AnalyticsSpecsObservation) {
	*out = *in
	if in.DiskIops != nil {
		in, out := &in.DiskIops, &out.DiskIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.InstanceSize != nil {
		in, out := &in.InstanceSize, &out.InstanceSize
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsSpecsObservation.
func (in *AnalyticsSpecsObservation) DeepCopy() *AnalyticsSpecsObservation {
	if in == nil {
		return nil
	}
	out := new(AnalyticsSpecsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsSpecsParameters) DeepCopyInto(out *AnalyticsSpecsParameters) {
	*out = *in
	if in.DiskIops != nil {
		in, out := &in.DiskIops, &out.DiskIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.InstanceSize != nil {
		in, out := &in.InstanceSize, &out.InstanceSize
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsSpecsParameters.
func (in *AnalyticsSpecsParameters) DeepCopy() *AnalyticsSpecsParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticsSpecsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalingInitParameters) DeepCopyInto(out *AutoScalingInitParameters) {
	*out = *in
	if in.ComputeEnabled != nil {
		in, out := &in.ComputeEnabled, &out.ComputeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ComputeMaxInstanceSize != nil {
		in, out := &in.ComputeMaxInstanceSize, &out.ComputeMaxInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ComputeMinInstanceSize != nil {
		in, out := &in.ComputeMinInstanceSize, &out.ComputeMinInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ComputeScaleDownEnabled != nil {
		in, out := &in.ComputeScaleDownEnabled, &out.ComputeScaleDownEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DiskGbEnabled != nil {
		in, out := &in.DiskGbEnabled, &out.DiskGbEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalingInitParameters.
func (in *AutoScalingInitParameters) DeepCopy() *AutoScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalingObservation) DeepCopyInto(out *AutoScalingObservation) {
	*out = *in
	if in.ComputeEnabled != nil {
		in, out := &in.ComputeEnabled, &out.ComputeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ComputeMaxInstanceSize != nil {
		in, out := &in.ComputeMaxInstanceSize, &out.ComputeMaxInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ComputeMinInstanceSize != nil {
		in, out := &in.ComputeMinInstanceSize, &out.ComputeMinInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ComputeScaleDownEnabled != nil {
		in, out := &in.ComputeScaleDownEnabled, &out.ComputeScaleDownEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DiskGbEnabled != nil {
		in, out := &in.DiskGbEnabled, &out.DiskGbEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalingObservation.
func (in *AutoScalingObservation) DeepCopy() *AutoScalingObservation {
	if in == nil {
		return nil
	}
	out := new(AutoScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalingParameters) DeepCopyInto(out *AutoScalingParameters) {
	*out = *in
	if in.ComputeEnabled != nil {
		in, out := &in.ComputeEnabled, &out.ComputeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ComputeMaxInstanceSize != nil {
		in, out := &in.ComputeMaxInstanceSize, &out.ComputeMaxInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ComputeMinInstanceSize != nil {
		in, out := &in.ComputeMinInstanceSize, &out.ComputeMinInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ComputeScaleDownEnabled != nil {
		in, out := &in.ComputeScaleDownEnabled, &out.ComputeScaleDownEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DiskGbEnabled != nil {
		in, out := &in.DiskGbEnabled, &out.DiskGbEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalingParameters.
func (in *AutoScalingParameters) DeepCopy() *AutoScalingParameters {
	if in == nil {
		return nil
	}
	out := new(AutoScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BiConnectorConfigInitParameters) DeepCopyInto(out *BiConnectorConfigInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ReadPreference != nil {
		in, out := &in.ReadPreference, &out.ReadPreference
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BiConnectorConfigInitParameters.
func (in *BiConnectorConfigInitParameters) DeepCopy() *BiConnectorConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(BiConnectorConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BiConnectorConfigObservation) DeepCopyInto(out *BiConnectorConfigObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ReadPreference != nil {
		in, out := &in.ReadPreference, &out.ReadPreference
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BiConnectorConfigObservation.
func (in *BiConnectorConfigObservation) DeepCopy() *BiConnectorConfigObservation {
	if in == nil {
		return nil
	}
	out := new(BiConnectorConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BiConnectorConfigParameters) DeepCopyInto(out *BiConnectorConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ReadPreference != nil {
		in, out := &in.ReadPreference, &out.ReadPreference
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BiConnectorConfigParameters.
func (in *BiConnectorConfigParameters) DeepCopy() *BiConnectorConfigParameters {
	if in == nil {
		return nil
	}
	out := new(BiConnectorConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BiConnectorInitParameters) DeepCopyInto(out *BiConnectorInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ReadPreference != nil {
		in, out := &in.ReadPreference, &out.ReadPreference
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BiConnectorInitParameters.
func (in *BiConnectorInitParameters) DeepCopy() *BiConnectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(BiConnectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BiConnectorObservation) DeepCopyInto(out *BiConnectorObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ReadPreference != nil {
		in, out := &in.ReadPreference, &out.ReadPreference
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BiConnectorObservation.
func (in *BiConnectorObservation) DeepCopy() *BiConnectorObservation {
	if in == nil {
		return nil
	}
	out := new(BiConnectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BiConnectorParameters) DeepCopyInto(out *BiConnectorParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ReadPreference != nil {
		in, out := &in.ReadPreference, &out.ReadPreference
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BiConnectorParameters.
func (in *BiConnectorParameters) DeepCopy() *BiConnectorParameters {
	if in == nil {
		return nil
	}
	out := new(BiConnectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAdvancedConfigurationInitParameters) DeepCopyInto(out *ClusterAdvancedConfigurationInitParameters) {
	*out = *in
	if in.DefaultReadConcern != nil {
		in, out := &in.DefaultReadConcern, &out.DefaultReadConcern
		*out = new(string)
		**out = **in
	}
	if in.DefaultWriteConcern != nil {
		in, out := &in.DefaultWriteConcern, &out.DefaultWriteConcern
		*out = new(string)
		**out = **in
	}
	if in.FailIndexKeyTooLong != nil {
		in, out := &in.FailIndexKeyTooLong, &out.FailIndexKeyTooLong
		*out = new(bool)
		**out = **in
	}
	if in.JavascriptEnabled != nil {
		in, out := &in.JavascriptEnabled, &out.JavascriptEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MinimumEnabledTLSProtocol != nil {
		in, out := &in.MinimumEnabledTLSProtocol, &out.MinimumEnabledTLSProtocol
		*out = new(string)
		**out = **in
	}
	if in.NoTableScan != nil {
		in, out := &in.NoTableScan, &out.NoTableScan
		*out = new(bool)
		**out = **in
	}
	if in.OplogMinRetentionHours != nil {
		in, out := &in.OplogMinRetentionHours, &out.OplogMinRetentionHours
		*out = new(float64)
		**out = **in
	}
	if in.OplogSizeMb != nil {
		in, out := &in.OplogSizeMb, &out.OplogSizeMb
		*out = new(float64)
		**out = **in
	}
	if in.SampleRefreshIntervalBiConnector != nil {
		in, out := &in.SampleRefreshIntervalBiConnector, &out.SampleRefreshIntervalBiConnector
		*out = new(float64)
		**out = **in
	}
	if in.SampleSizeBiConnector != nil {
		in, out := &in.SampleSizeBiConnector, &out.SampleSizeBiConnector
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAdvancedConfigurationInitParameters.
func (in *ClusterAdvancedConfigurationInitParameters) DeepCopy() *ClusterAdvancedConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAdvancedConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAdvancedConfigurationObservation) DeepCopyInto(out *ClusterAdvancedConfigurationObservation) {
	*out = *in
	if in.DefaultReadConcern != nil {
		in, out := &in.DefaultReadConcern, &out.DefaultReadConcern
		*out = new(string)
		**out = **in
	}
	if in.DefaultWriteConcern != nil {
		in, out := &in.DefaultWriteConcern, &out.DefaultWriteConcern
		*out = new(string)
		**out = **in
	}
	if in.FailIndexKeyTooLong != nil {
		in, out := &in.FailIndexKeyTooLong, &out.FailIndexKeyTooLong
		*out = new(bool)
		**out = **in
	}
	if in.JavascriptEnabled != nil {
		in, out := &in.JavascriptEnabled, &out.JavascriptEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MinimumEnabledTLSProtocol != nil {
		in, out := &in.MinimumEnabledTLSProtocol, &out.MinimumEnabledTLSProtocol
		*out = new(string)
		**out = **in
	}
	if in.NoTableScan != nil {
		in, out := &in.NoTableScan, &out.NoTableScan
		*out = new(bool)
		**out = **in
	}
	if in.OplogMinRetentionHours != nil {
		in, out := &in.OplogMinRetentionHours, &out.OplogMinRetentionHours
		*out = new(float64)
		**out = **in
	}
	if in.OplogSizeMb != nil {
		in, out := &in.OplogSizeMb, &out.OplogSizeMb
		*out = new(float64)
		**out = **in
	}
	if in.SampleRefreshIntervalBiConnector != nil {
		in, out := &in.SampleRefreshIntervalBiConnector, &out.SampleRefreshIntervalBiConnector
		*out = new(float64)
		**out = **in
	}
	if in.SampleSizeBiConnector != nil {
		in, out := &in.SampleSizeBiConnector, &out.SampleSizeBiConnector
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAdvancedConfigurationObservation.
func (in *ClusterAdvancedConfigurationObservation) DeepCopy() *ClusterAdvancedConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterAdvancedConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAdvancedConfigurationParameters) DeepCopyInto(out *ClusterAdvancedConfigurationParameters) {
	*out = *in
	if in.DefaultReadConcern != nil {
		in, out := &in.DefaultReadConcern, &out.DefaultReadConcern
		*out = new(string)
		**out = **in
	}
	if in.DefaultWriteConcern != nil {
		in, out := &in.DefaultWriteConcern, &out.DefaultWriteConcern
		*out = new(string)
		**out = **in
	}
	if in.FailIndexKeyTooLong != nil {
		in, out := &in.FailIndexKeyTooLong, &out.FailIndexKeyTooLong
		*out = new(bool)
		**out = **in
	}
	if in.JavascriptEnabled != nil {
		in, out := &in.JavascriptEnabled, &out.JavascriptEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MinimumEnabledTLSProtocol != nil {
		in, out := &in.MinimumEnabledTLSProtocol, &out.MinimumEnabledTLSProtocol
		*out = new(string)
		**out = **in
	}
	if in.NoTableScan != nil {
		in, out := &in.NoTableScan, &out.NoTableScan
		*out = new(bool)
		**out = **in
	}
	if in.OplogMinRetentionHours != nil {
		in, out := &in.OplogMinRetentionHours, &out.OplogMinRetentionHours
		*out = new(float64)
		**out = **in
	}
	if in.OplogSizeMb != nil {
		in, out := &in.OplogSizeMb, &out.OplogSizeMb
		*out = new(float64)
		**out = **in
	}
	if in.SampleRefreshIntervalBiConnector != nil {
		in, out := &in.SampleRefreshIntervalBiConnector, &out.SampleRefreshIntervalBiConnector
		*out = new(float64)
		**out = **in
	}
	if in.SampleSizeBiConnector != nil {
		in, out := &in.SampleSizeBiConnector, &out.SampleSizeBiConnector
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAdvancedConfigurationParameters.
func (in *ClusterAdvancedConfigurationParameters) DeepCopy() *ClusterAdvancedConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAdvancedConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterBiConnectorConfigInitParameters) DeepCopyInto(out *ClusterBiConnectorConfigInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ReadPreference != nil {
		in, out := &in.ReadPreference, &out.ReadPreference
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterBiConnectorConfigInitParameters.
func (in *ClusterBiConnectorConfigInitParameters) DeepCopy() *ClusterBiConnectorConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterBiConnectorConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterBiConnectorConfigObservation) DeepCopyInto(out *ClusterBiConnectorConfigObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ReadPreference != nil {
		in, out := &in.ReadPreference, &out.ReadPreference
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterBiConnectorConfigObservation.
func (in *ClusterBiConnectorConfigObservation) DeepCopy() *ClusterBiConnectorConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterBiConnectorConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterBiConnectorConfigParameters) DeepCopyInto(out *ClusterBiConnectorConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ReadPreference != nil {
		in, out := &in.ReadPreference, &out.ReadPreference
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterBiConnectorConfigParameters.
func (in *ClusterBiConnectorConfigParameters) DeepCopy() *ClusterBiConnectorConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterBiConnectorConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConnectionStringsInitParameters) DeepCopyInto(out *ClusterConnectionStringsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConnectionStringsInitParameters.
func (in *ClusterConnectionStringsInitParameters) DeepCopy() *ClusterConnectionStringsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConnectionStringsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConnectionStringsObservation) DeepCopyInto(out *ClusterConnectionStringsObservation) {
	*out = *in
	if in.AwsPrivateLink != nil {
		in, out := &in.AwsPrivateLink, &out.AwsPrivateLink
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AwsPrivateLinkSrv != nil {
		in, out := &in.AwsPrivateLinkSrv, &out.AwsPrivateLinkSrv
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = new(string)
		**out = **in
	}
	if in.PrivateEndpoint != nil {
		in, out := &in.PrivateEndpoint, &out.PrivateEndpoint
		*out = make([]ConnectionStringsPrivateEndpointObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateSrv != nil {
		in, out := &in.PrivateSrv, &out.PrivateSrv
		*out = new(string)
		**out = **in
	}
	if in.Standard != nil {
		in, out := &in.Standard, &out.Standard
		*out = new(string)
		**out = **in
	}
	if in.StandardSrv != nil {
		in, out := &in.StandardSrv, &out.StandardSrv
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConnectionStringsObservation.
func (in *ClusterConnectionStringsObservation) DeepCopy() *ClusterConnectionStringsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterConnectionStringsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConnectionStringsParameters) DeepCopyInto(out *ClusterConnectionStringsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConnectionStringsParameters.
func (in *ClusterConnectionStringsParameters) DeepCopy() *ClusterConnectionStringsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConnectionStringsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitParameters) DeepCopyInto(out *ClusterInitParameters) {
	*out = *in
	if in.AdvancedConfiguration != nil {
		in, out := &in.AdvancedConfiguration, &out.AdvancedConfiguration
		*out = make([]ClusterAdvancedConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoScalingComputeEnabled != nil {
		in, out := &in.AutoScalingComputeEnabled, &out.AutoScalingComputeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoScalingComputeScaleDownEnabled != nil {
		in, out := &in.AutoScalingComputeScaleDownEnabled, &out.AutoScalingComputeScaleDownEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoScalingDiskGbEnabled != nil {
		in, out := &in.AutoScalingDiskGbEnabled, &out.AutoScalingDiskGbEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BackingProviderName != nil {
		in, out := &in.BackingProviderName, &out.BackingProviderName
		*out = new(string)
		**out = **in
	}
	if in.BackupEnabled != nil {
		in, out := &in.BackupEnabled, &out.BackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BiConnector != nil {
		in, out := &in.BiConnector, &out.BiConnector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.BiConnectorConfig != nil {
		in, out := &in.BiConnectorConfig, &out.BiConnectorConfig
		*out = make([]ClusterBiConnectorConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudBackup != nil {
		in, out := &in.CloudBackup, &out.CloudBackup
		*out = new(bool)
		**out = **in
	}
	if in.ClusterType != nil {
		in, out := &in.ClusterType, &out.ClusterType
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EncryptionAtRestProvider != nil {
		in, out := &in.EncryptionAtRestProvider, &out.EncryptionAtRestProvider
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]ClusterLabelsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoDBMajorVersion != nil {
		in, out := &in.MongoDBMajorVersion, &out.MongoDBMajorVersion
		*out = new(string)
		**out = **in
	}
	if in.NumShards != nil {
		in, out := &in.NumShards, &out.NumShards
		*out = new(float64)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.PitEnabled != nil {
		in, out := &in.PitEnabled, &out.PitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProviderAutoScalingComputeMaxInstanceSize != nil {
		in, out := &in.ProviderAutoScalingComputeMaxInstanceSize, &out.ProviderAutoScalingComputeMaxInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ProviderAutoScalingComputeMinInstanceSize != nil {
		in, out := &in.ProviderAutoScalingComputeMinInstanceSize, &out.ProviderAutoScalingComputeMinInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ProviderBackupEnabled != nil {
		in, out := &in.ProviderBackupEnabled, &out.ProviderBackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProviderDiskIops != nil {
		in, out := &in.ProviderDiskIops, &out.ProviderDiskIops
		*out = new(float64)
		**out = **in
	}
	if in.ProviderDiskTypeName != nil {
		in, out := &in.ProviderDiskTypeName, &out.ProviderDiskTypeName
		*out = new(string)
		**out = **in
	}
	if in.ProviderEncryptEBSVolume != nil {
		in, out := &in.ProviderEncryptEBSVolume, &out.ProviderEncryptEBSVolume
		*out = new(bool)
		**out = **in
	}
	if in.ProviderInstanceSizeName != nil {
		in, out := &in.ProviderInstanceSizeName, &out.ProviderInstanceSizeName
		*out = new(string)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ProviderRegionName != nil {
		in, out := &in.ProviderRegionName, &out.ProviderRegionName
		*out = new(string)
		**out = **in
	}
	if in.ProviderVolumeType != nil {
		in, out := &in.ProviderVolumeType, &out.ProviderVolumeType
		*out = new(string)
		**out = **in
	}
	if in.ReplicationFactor != nil {
		in, out := &in.ReplicationFactor, &out.ReplicationFactor
		*out = new(float64)
		**out = **in
	}
	if in.ReplicationSpecs != nil {
		in, out := &in.ReplicationSpecs, &out.ReplicationSpecs
		*out = make([]ClusterReplicationSpecsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerminationProtectionEnabled != nil {
		in, out := &in.TerminationProtectionEnabled, &out.TerminationProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.VersionReleaseSystem != nil {
		in, out := &in.VersionReleaseSystem, &out.VersionReleaseSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitParameters.
func (in *ClusterInitParameters) DeepCopy() *ClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLabelsInitParameters) DeepCopyInto(out *ClusterLabelsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLabelsInitParameters.
func (in *ClusterLabelsInitParameters) DeepCopy() *ClusterLabelsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLabelsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLabelsObservation) DeepCopyInto(out *ClusterLabelsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLabelsObservation.
func (in *ClusterLabelsObservation) DeepCopy() *ClusterLabelsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterLabelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLabelsParameters) DeepCopyInto(out *ClusterLabelsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLabelsParameters.
func (in *ClusterLabelsParameters) DeepCopy() *ClusterLabelsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLabelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterObservation) DeepCopyInto(out *ClusterObservation) {
	*out = *in
	if in.AdvancedConfiguration != nil {
		in, out := &in.AdvancedConfiguration, &out.AdvancedConfiguration
		*out = make([]ClusterAdvancedConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoScalingComputeEnabled != nil {
		in, out := &in.AutoScalingComputeEnabled, &out.AutoScalingComputeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoScalingComputeScaleDownEnabled != nil {
		in, out := &in.AutoScalingComputeScaleDownEnabled, &out.AutoScalingComputeScaleDownEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoScalingDiskGbEnabled != nil {
		in, out := &in.AutoScalingDiskGbEnabled, &out.AutoScalingDiskGbEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BackingProviderName != nil {
		in, out := &in.BackingProviderName, &out.BackingProviderName
		*out = new(string)
		**out = **in
	}
	if in.BackupEnabled != nil {
		in, out := &in.BackupEnabled, &out.BackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BiConnector != nil {
		in, out := &in.BiConnector, &out.BiConnector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.BiConnectorConfig != nil {
		in, out := &in.BiConnectorConfig, &out.BiConnectorConfig
		*out = make([]ClusterBiConnectorConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudBackup != nil {
		in, out := &in.CloudBackup, &out.CloudBackup
		*out = new(bool)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterType != nil {
		in, out := &in.ClusterType, &out.ClusterType
		*out = new(string)
		**out = **in
	}
	if in.ConnectionStrings != nil {
		in, out := &in.ConnectionStrings, &out.ConnectionStrings
		*out = make([]ClusterConnectionStringsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerID != nil {
		in, out := &in.ContainerID, &out.ContainerID
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EncryptionAtRestProvider != nil {
		in, out := &in.EncryptionAtRestProvider, &out.EncryptionAtRestProvider
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]ClusterLabelsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoDBMajorVersion != nil {
		in, out := &in.MongoDBMajorVersion, &out.MongoDBMajorVersion
		*out = new(string)
		**out = **in
	}
	if in.MongoDBVersion != nil {
		in, out := &in.MongoDBVersion, &out.MongoDBVersion
		*out = new(string)
		**out = **in
	}
	if in.MongoURI != nil {
		in, out := &in.MongoURI, &out.MongoURI
		*out = new(string)
		**out = **in
	}
	if in.MongoURIUpdated != nil {
		in, out := &in.MongoURIUpdated, &out.MongoURIUpdated
		*out = new(string)
		**out = **in
	}
	if in.MongoURIWithOptions != nil {
		in, out := &in.MongoURIWithOptions, &out.MongoURIWithOptions
		*out = new(string)
		**out = **in
	}
	if in.NumShards != nil {
		in, out := &in.NumShards, &out.NumShards
		*out = new(float64)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.PitEnabled != nil {
		in, out := &in.PitEnabled, &out.PitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProviderAutoScalingComputeMaxInstanceSize != nil {
		in, out := &in.ProviderAutoScalingComputeMaxInstanceSize, &out.ProviderAutoScalingComputeMaxInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ProviderAutoScalingComputeMinInstanceSize != nil {
		in, out := &in.ProviderAutoScalingComputeMinInstanceSize, &out.ProviderAutoScalingComputeMinInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ProviderBackupEnabled != nil {
		in, out := &in.ProviderBackupEnabled, &out.ProviderBackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProviderDiskIops != nil {
		in, out := &in.ProviderDiskIops, &out.ProviderDiskIops
		*out = new(float64)
		**out = **in
	}
	if in.ProviderDiskTypeName != nil {
		in, out := &in.ProviderDiskTypeName, &out.ProviderDiskTypeName
		*out = new(string)
		**out = **in
	}
	if in.ProviderEncryptEBSVolume != nil {
		in, out := &in.ProviderEncryptEBSVolume, &out.ProviderEncryptEBSVolume
		*out = new(bool)
		**out = **in
	}
	if in.ProviderEncryptEBSVolumeFlag != nil {
		in, out := &in.ProviderEncryptEBSVolumeFlag, &out.ProviderEncryptEBSVolumeFlag
		*out = new(bool)
		**out = **in
	}
	if in.ProviderInstanceSizeName != nil {
		in, out := &in.ProviderInstanceSizeName, &out.ProviderInstanceSizeName
		*out = new(string)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ProviderRegionName != nil {
		in, out := &in.ProviderRegionName, &out.ProviderRegionName
		*out = new(string)
		**out = **in
	}
	if in.ProviderVolumeType != nil {
		in, out := &in.ProviderVolumeType, &out.ProviderVolumeType
		*out = new(string)
		**out = **in
	}
	if in.ReplicationFactor != nil {
		in, out := &in.ReplicationFactor, &out.ReplicationFactor
		*out = new(float64)
		**out = **in
	}
	if in.ReplicationSpecs != nil {
		in, out := &in.ReplicationSpecs, &out.ReplicationSpecs
		*out = make([]ClusterReplicationSpecsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnapshotBackupPolicy != nil {
		in, out := &in.SnapshotBackupPolicy, &out.SnapshotBackupPolicy
		*out = make([]SnapshotBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SrvAddress != nil {
		in, out := &in.SrvAddress, &out.SrvAddress
		*out = new(string)
		**out = **in
	}
	if in.StateName != nil {
		in, out := &in.StateName, &out.StateName
		*out = new(string)
		**out = **in
	}
	if in.TerminationProtectionEnabled != nil {
		in, out := &in.TerminationProtectionEnabled, &out.TerminationProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.VersionReleaseSystem != nil {
		in, out := &in.VersionReleaseSystem, &out.VersionReleaseSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterObservation.
func (in *ClusterObservation) DeepCopy() *ClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterParameters) DeepCopyInto(out *ClusterParameters) {
	*out = *in
	if in.AdvancedConfiguration != nil {
		in, out := &in.AdvancedConfiguration, &out.AdvancedConfiguration
		*out = make([]ClusterAdvancedConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoScalingComputeEnabled != nil {
		in, out := &in.AutoScalingComputeEnabled, &out.AutoScalingComputeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoScalingComputeScaleDownEnabled != nil {
		in, out := &in.AutoScalingComputeScaleDownEnabled, &out.AutoScalingComputeScaleDownEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoScalingDiskGbEnabled != nil {
		in, out := &in.AutoScalingDiskGbEnabled, &out.AutoScalingDiskGbEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BackingProviderName != nil {
		in, out := &in.BackingProviderName, &out.BackingProviderName
		*out = new(string)
		**out = **in
	}
	if in.BackupEnabled != nil {
		in, out := &in.BackupEnabled, &out.BackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BiConnector != nil {
		in, out := &in.BiConnector, &out.BiConnector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.BiConnectorConfig != nil {
		in, out := &in.BiConnectorConfig, &out.BiConnectorConfig
		*out = make([]ClusterBiConnectorConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudBackup != nil {
		in, out := &in.CloudBackup, &out.CloudBackup
		*out = new(bool)
		**out = **in
	}
	if in.ClusterType != nil {
		in, out := &in.ClusterType, &out.ClusterType
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EncryptionAtRestProvider != nil {
		in, out := &in.EncryptionAtRestProvider, &out.EncryptionAtRestProvider
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]ClusterLabelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoDBMajorVersion != nil {
		in, out := &in.MongoDBMajorVersion, &out.MongoDBMajorVersion
		*out = new(string)
		**out = **in
	}
	if in.NumShards != nil {
		in, out := &in.NumShards, &out.NumShards
		*out = new(float64)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.PitEnabled != nil {
		in, out := &in.PitEnabled, &out.PitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProviderAutoScalingComputeMaxInstanceSize != nil {
		in, out := &in.ProviderAutoScalingComputeMaxInstanceSize, &out.ProviderAutoScalingComputeMaxInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ProviderAutoScalingComputeMinInstanceSize != nil {
		in, out := &in.ProviderAutoScalingComputeMinInstanceSize, &out.ProviderAutoScalingComputeMinInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ProviderBackupEnabled != nil {
		in, out := &in.ProviderBackupEnabled, &out.ProviderBackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProviderDiskIops != nil {
		in, out := &in.ProviderDiskIops, &out.ProviderDiskIops
		*out = new(float64)
		**out = **in
	}
	if in.ProviderDiskTypeName != nil {
		in, out := &in.ProviderDiskTypeName, &out.ProviderDiskTypeName
		*out = new(string)
		**out = **in
	}
	if in.ProviderEncryptEBSVolume != nil {
		in, out := &in.ProviderEncryptEBSVolume, &out.ProviderEncryptEBSVolume
		*out = new(bool)
		**out = **in
	}
	if in.ProviderInstanceSizeName != nil {
		in, out := &in.ProviderInstanceSizeName, &out.ProviderInstanceSizeName
		*out = new(string)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ProviderRegionName != nil {
		in, out := &in.ProviderRegionName, &out.ProviderRegionName
		*out = new(string)
		**out = **in
	}
	if in.ProviderVolumeType != nil {
		in, out := &in.ProviderVolumeType, &out.ProviderVolumeType
		*out = new(string)
		**out = **in
	}
	if in.ReplicationFactor != nil {
		in, out := &in.ReplicationFactor, &out.ReplicationFactor
		*out = new(float64)
		**out = **in
	}
	if in.ReplicationSpecs != nil {
		in, out := &in.ReplicationSpecs, &out.ReplicationSpecs
		*out = make([]ClusterReplicationSpecsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerminationProtectionEnabled != nil {
		in, out := &in.TerminationProtectionEnabled, &out.TerminationProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.VersionReleaseSystem != nil {
		in, out := &in.VersionReleaseSystem, &out.VersionReleaseSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterParameters.
func (in *ClusterParameters) DeepCopy() *ClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterReplicationSpecsInitParameters) DeepCopyInto(out *ClusterReplicationSpecsInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NumShards != nil {
		in, out := &in.NumShards, &out.NumShards
		*out = new(float64)
		**out = **in
	}
	if in.RegionsConfig != nil {
		in, out := &in.RegionsConfig, &out.RegionsConfig
		*out = make([]RegionsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterReplicationSpecsInitParameters.
func (in *ClusterReplicationSpecsInitParameters) DeepCopy() *ClusterReplicationSpecsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterReplicationSpecsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterReplicationSpecsObservation) DeepCopyInto(out *ClusterReplicationSpecsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NumShards != nil {
		in, out := &in.NumShards, &out.NumShards
		*out = new(float64)
		**out = **in
	}
	if in.RegionsConfig != nil {
		in, out := &in.RegionsConfig, &out.RegionsConfig
		*out = make([]RegionsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterReplicationSpecsObservation.
func (in *ClusterReplicationSpecsObservation) DeepCopy() *ClusterReplicationSpecsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterReplicationSpecsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterReplicationSpecsParameters) DeepCopyInto(out *ClusterReplicationSpecsParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NumShards != nil {
		in, out := &in.NumShards, &out.NumShards
		*out = new(float64)
		**out = **in
	}
	if in.RegionsConfig != nil {
		in, out := &in.RegionsConfig, &out.RegionsConfig
		*out = make([]RegionsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterReplicationSpecsParameters.
func (in *ClusterReplicationSpecsParameters) DeepCopy() *ClusterReplicationSpecsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterReplicationSpecsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStringsInitParameters) DeepCopyInto(out *ConnectionStringsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStringsInitParameters.
func (in *ConnectionStringsInitParameters) DeepCopy() *ConnectionStringsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionStringsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStringsObservation) DeepCopyInto(out *ConnectionStringsObservation) {
	*out = *in
	if in.AwsPrivateLink != nil {
		in, out := &in.AwsPrivateLink, &out.AwsPrivateLink
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AwsPrivateLinkSrv != nil {
		in, out := &in.AwsPrivateLinkSrv, &out.AwsPrivateLinkSrv
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = new(string)
		**out = **in
	}
	if in.PrivateEndpoint != nil {
		in, out := &in.PrivateEndpoint, &out.PrivateEndpoint
		*out = make([]PrivateEndpointObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateSrv != nil {
		in, out := &in.PrivateSrv, &out.PrivateSrv
		*out = new(string)
		**out = **in
	}
	if in.Standard != nil {
		in, out := &in.Standard, &out.Standard
		*out = new(string)
		**out = **in
	}
	if in.StandardSrv != nil {
		in, out := &in.StandardSrv, &out.StandardSrv
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStringsObservation.
func (in *ConnectionStringsObservation) DeepCopy() *ConnectionStringsObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionStringsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStringsParameters) DeepCopyInto(out *ConnectionStringsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStringsParameters.
func (in *ConnectionStringsParameters) DeepCopy() *ConnectionStringsParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionStringsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStringsPrivateEndpointInitParameters) DeepCopyInto(out *ConnectionStringsPrivateEndpointInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStringsPrivateEndpointInitParameters.
func (in *ConnectionStringsPrivateEndpointInitParameters) DeepCopy() *ConnectionStringsPrivateEndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionStringsPrivateEndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStringsPrivateEndpointObservation) DeepCopyInto(out *ConnectionStringsPrivateEndpointObservation) {
	*out = *in
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]PrivateEndpointEndpointsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SrvConnectionString != nil {
		in, out := &in.SrvConnectionString, &out.SrvConnectionString
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStringsPrivateEndpointObservation.
func (in *ConnectionStringsPrivateEndpointObservation) DeepCopy() *ConnectionStringsPrivateEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionStringsPrivateEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStringsPrivateEndpointParameters) DeepCopyInto(out *ConnectionStringsPrivateEndpointParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStringsPrivateEndpointParameters.
func (in *ConnectionStringsPrivateEndpointParameters) DeepCopy() *ConnectionStringsPrivateEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionStringsPrivateEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElectableSpecsInitParameters) DeepCopyInto(out *ElectableSpecsInitParameters) {
	*out = *in
	if in.DiskIops != nil {
		in, out := &in.DiskIops, &out.DiskIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.InstanceSize != nil {
		in, out := &in.InstanceSize, &out.InstanceSize
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElectableSpecsInitParameters.
func (in *ElectableSpecsInitParameters) DeepCopy() *ElectableSpecsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ElectableSpecsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElectableSpecsObservation) DeepCopyInto(out *ElectableSpecsObservation) {
	*out = *in
	if in.DiskIops != nil {
		in, out := &in.DiskIops, &out.DiskIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.InstanceSize != nil {
		in, out := &in.InstanceSize, &out.InstanceSize
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElectableSpecsObservation.
func (in *ElectableSpecsObservation) DeepCopy() *ElectableSpecsObservation {
	if in == nil {
		return nil
	}
	out := new(ElectableSpecsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElectableSpecsParameters) DeepCopyInto(out *ElectableSpecsParameters) {
	*out = *in
	if in.DiskIops != nil {
		in, out := &in.DiskIops, &out.DiskIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.InstanceSize != nil {
		in, out := &in.InstanceSize, &out.InstanceSize
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElectableSpecsParameters.
func (in *ElectableSpecsParameters) DeepCopy() *ElectableSpecsParameters {
	if in == nil {
		return nil
	}
	out := new(ElectableSpecsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointsInitParameters) DeepCopyInto(out *EndpointsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointsInitParameters.
func (in *EndpointsInitParameters) DeepCopy() *EndpointsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointsObservation) DeepCopyInto(out *EndpointsObservation) {
	*out = *in
	if in.EndpointID != nil {
		in, out := &in.EndpointID, &out.EndpointID
		*out = new(string)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointsObservation.
func (in *EndpointsObservation) DeepCopy() *EndpointsObservation {
	if in == nil {
		return nil
	}
	out := new(EndpointsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointsParameters) DeepCopyInto(out *EndpointsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointsParameters.
func (in *EndpointsParameters) DeepCopy() *EndpointsParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsInitParameters) DeepCopyInto(out *LabelsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsInitParameters.
func (in *LabelsInitParameters) DeepCopy() *LabelsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LabelsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsObservation) DeepCopyInto(out *LabelsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsObservation.
func (in *LabelsObservation) DeepCopy() *LabelsObservation {
	if in == nil {
		return nil
	}
	out := new(LabelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsParameters) DeepCopyInto(out *LabelsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsParameters.
func (in *LabelsParameters) DeepCopy() *LabelsParameters {
	if in == nil {
		return nil
	}
	out := new(LabelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoliciesInitParameters) DeepCopyInto(out *PoliciesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoliciesInitParameters.
func (in *PoliciesInitParameters) DeepCopy() *PoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoliciesObservation) DeepCopyInto(out *PoliciesObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PolicyItem != nil {
		in, out := &in.PolicyItem, &out.PolicyItem
		*out = make([]PolicyItemObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoliciesObservation.
func (in *PoliciesObservation) DeepCopy() *PoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(PoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoliciesParameters) DeepCopyInto(out *PoliciesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoliciesParameters.
func (in *PoliciesParameters) DeepCopy() *PoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(PoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyItemInitParameters) DeepCopyInto(out *PolicyItemInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyItemInitParameters.
func (in *PolicyItemInitParameters) DeepCopy() *PolicyItemInitParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyItemInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyItemObservation) DeepCopyInto(out *PolicyItemObservation) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyType != nil {
		in, out := &in.FrequencyType, &out.FrequencyType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RetentionUnit != nil {
		in, out := &in.RetentionUnit, &out.RetentionUnit
		*out = new(string)
		**out = **in
	}
	if in.RetentionValue != nil {
		in, out := &in.RetentionValue, &out.RetentionValue
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyItemObservation.
func (in *PolicyItemObservation) DeepCopy() *PolicyItemObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyItemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyItemParameters) DeepCopyInto(out *PolicyItemParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyItemParameters.
func (in *PolicyItemParameters) DeepCopy() *PolicyItemParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyItemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointEndpointsInitParameters) DeepCopyInto(out *PrivateEndpointEndpointsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointEndpointsInitParameters.
func (in *PrivateEndpointEndpointsInitParameters) DeepCopy() *PrivateEndpointEndpointsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointEndpointsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointEndpointsObservation) DeepCopyInto(out *PrivateEndpointEndpointsObservation) {
	*out = *in
	if in.EndpointID != nil {
		in, out := &in.EndpointID, &out.EndpointID
		*out = new(string)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointEndpointsObservation.
func (in *PrivateEndpointEndpointsObservation) DeepCopy() *PrivateEndpointEndpointsObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointEndpointsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointEndpointsParameters) DeepCopyInto(out *PrivateEndpointEndpointsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointEndpointsParameters.
func (in *PrivateEndpointEndpointsParameters) DeepCopy() *PrivateEndpointEndpointsParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointEndpointsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointInitParameters) DeepCopyInto(out *PrivateEndpointInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointInitParameters.
func (in *PrivateEndpointInitParameters) DeepCopy() *PrivateEndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointObservation) DeepCopyInto(out *PrivateEndpointObservation) {
	*out = *in
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]EndpointsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SrvConnectionString != nil {
		in, out := &in.SrvConnectionString, &out.SrvConnectionString
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointObservation.
func (in *PrivateEndpointObservation) DeepCopy() *PrivateEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointParameters) DeepCopyInto(out *PrivateEndpointParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointParameters.
func (in *PrivateEndpointParameters) DeepCopy() *PrivateEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadOnlySpecsInitParameters) DeepCopyInto(out *ReadOnlySpecsInitParameters) {
	*out = *in
	if in.DiskIops != nil {
		in, out := &in.DiskIops, &out.DiskIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.InstanceSize != nil {
		in, out := &in.InstanceSize, &out.InstanceSize
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadOnlySpecsInitParameters.
func (in *ReadOnlySpecsInitParameters) DeepCopy() *ReadOnlySpecsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReadOnlySpecsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadOnlySpecsObservation) DeepCopyInto(out *ReadOnlySpecsObservation) {
	*out = *in
	if in.DiskIops != nil {
		in, out := &in.DiskIops, &out.DiskIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.InstanceSize != nil {
		in, out := &in.InstanceSize, &out.InstanceSize
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadOnlySpecsObservation.
func (in *ReadOnlySpecsObservation) DeepCopy() *ReadOnlySpecsObservation {
	if in == nil {
		return nil
	}
	out := new(ReadOnlySpecsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadOnlySpecsParameters) DeepCopyInto(out *ReadOnlySpecsParameters) {
	*out = *in
	if in.DiskIops != nil {
		in, out := &in.DiskIops, &out.DiskIops
		*out = new(float64)
		**out = **in
	}
	if in.EBSVolumeType != nil {
		in, out := &in.EBSVolumeType, &out.EBSVolumeType
		*out = new(string)
		**out = **in
	}
	if in.InstanceSize != nil {
		in, out := &in.InstanceSize, &out.InstanceSize
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadOnlySpecsParameters.
func (in *ReadOnlySpecsParameters) DeepCopy() *ReadOnlySpecsParameters {
	if in == nil {
		return nil
	}
	out := new(ReadOnlySpecsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionConfigsInitParameters) DeepCopyInto(out *RegionConfigsInitParameters) {
	*out = *in
	if in.AnalyticsAutoScaling != nil {
		in, out := &in.AnalyticsAutoScaling, &out.AnalyticsAutoScaling
		*out = make([]AnalyticsAutoScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalyticsSpecs != nil {
		in, out := &in.AnalyticsSpecs, &out.AnalyticsSpecs
		*out = make([]AnalyticsSpecsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoScaling != nil {
		in, out := &in.AutoScaling, &out.AutoScaling
		*out = make([]AutoScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackingProviderName != nil {
		in, out := &in.BackingProviderName, &out.BackingProviderName
		*out = new(string)
		**out = **in
	}
	if in.ElectableSpecs != nil {
		in, out := &in.ElectableSpecs, &out.ElectableSpecs
		*out = make([]ElectableSpecsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ReadOnlySpecs != nil {
		in, out := &in.ReadOnlySpecs, &out.ReadOnlySpecs
		*out = make([]ReadOnlySpecsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionConfigsInitParameters.
func (in *RegionConfigsInitParameters) DeepCopy() *RegionConfigsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionConfigsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionConfigsObservation) DeepCopyInto(out *RegionConfigsObservation) {
	*out = *in
	if in.AnalyticsAutoScaling != nil {
		in, out := &in.AnalyticsAutoScaling, &out.AnalyticsAutoScaling
		*out = make([]AnalyticsAutoScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalyticsSpecs != nil {
		in, out := &in.AnalyticsSpecs, &out.AnalyticsSpecs
		*out = make([]AnalyticsSpecsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoScaling != nil {
		in, out := &in.AutoScaling, &out.AutoScaling
		*out = make([]AutoScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackingProviderName != nil {
		in, out := &in.BackingProviderName, &out.BackingProviderName
		*out = new(string)
		**out = **in
	}
	if in.ElectableSpecs != nil {
		in, out := &in.ElectableSpecs, &out.ElectableSpecs
		*out = make([]ElectableSpecsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ReadOnlySpecs != nil {
		in, out := &in.ReadOnlySpecs, &out.ReadOnlySpecs
		*out = make([]ReadOnlySpecsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionConfigsObservation.
func (in *RegionConfigsObservation) DeepCopy() *RegionConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(RegionConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionConfigsParameters) DeepCopyInto(out *RegionConfigsParameters) {
	*out = *in
	if in.AnalyticsAutoScaling != nil {
		in, out := &in.AnalyticsAutoScaling, &out.AnalyticsAutoScaling
		*out = make([]AnalyticsAutoScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalyticsSpecs != nil {
		in, out := &in.AnalyticsSpecs, &out.AnalyticsSpecs
		*out = make([]AnalyticsSpecsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoScaling != nil {
		in, out := &in.AutoScaling, &out.AutoScaling
		*out = make([]AutoScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackingProviderName != nil {
		in, out := &in.BackingProviderName, &out.BackingProviderName
		*out = new(string)
		**out = **in
	}
	if in.ElectableSpecs != nil {
		in, out := &in.ElectableSpecs, &out.ElectableSpecs
		*out = make([]ElectableSpecsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ReadOnlySpecs != nil {
		in, out := &in.ReadOnlySpecs, &out.ReadOnlySpecs
		*out = make([]ReadOnlySpecsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionConfigsParameters.
func (in *RegionConfigsParameters) DeepCopy() *RegionConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(RegionConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionsConfigInitParameters) DeepCopyInto(out *RegionsConfigInitParameters) {
	*out = *in
	if in.AnalyticsNodes != nil {
		in, out := &in.AnalyticsNodes, &out.AnalyticsNodes
		*out = new(float64)
		**out = **in
	}
	if in.ElectableNodes != nil {
		in, out := &in.ElectableNodes, &out.ElectableNodes
		*out = new(float64)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ReadOnlyNodes != nil {
		in, out := &in.ReadOnlyNodes, &out.ReadOnlyNodes
		*out = new(float64)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionsConfigInitParameters.
func (in *RegionsConfigInitParameters) DeepCopy() *RegionsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionsConfigObservation) DeepCopyInto(out *RegionsConfigObservation) {
	*out = *in
	if in.AnalyticsNodes != nil {
		in, out := &in.AnalyticsNodes, &out.AnalyticsNodes
		*out = new(float64)
		**out = **in
	}
	if in.ElectableNodes != nil {
		in, out := &in.ElectableNodes, &out.ElectableNodes
		*out = new(float64)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ReadOnlyNodes != nil {
		in, out := &in.ReadOnlyNodes, &out.ReadOnlyNodes
		*out = new(float64)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionsConfigObservation.
func (in *RegionsConfigObservation) DeepCopy() *RegionsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RegionsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionsConfigParameters) DeepCopyInto(out *RegionsConfigParameters) {
	*out = *in
	if in.AnalyticsNodes != nil {
		in, out := &in.AnalyticsNodes, &out.AnalyticsNodes
		*out = new(float64)
		**out = **in
	}
	if in.ElectableNodes != nil {
		in, out := &in.ElectableNodes, &out.ElectableNodes
		*out = new(float64)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ReadOnlyNodes != nil {
		in, out := &in.ReadOnlyNodes, &out.ReadOnlyNodes
		*out = new(float64)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionsConfigParameters.
func (in *RegionsConfigParameters) DeepCopy() *RegionsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RegionsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationSpecsInitParameters) DeepCopyInto(out *ReplicationSpecsInitParameters) {
	*out = *in
	if in.NumShards != nil {
		in, out := &in.NumShards, &out.NumShards
		*out = new(float64)
		**out = **in
	}
	if in.RegionConfigs != nil {
		in, out := &in.RegionConfigs, &out.RegionConfigs
		*out = make([]RegionConfigsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationSpecsInitParameters.
func (in *ReplicationSpecsInitParameters) DeepCopy() *ReplicationSpecsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicationSpecsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationSpecsObservation) DeepCopyInto(out *ReplicationSpecsObservation) {
	*out = *in
	if in.ContainerID != nil {
		in, out := &in.ContainerID, &out.ContainerID
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NumShards != nil {
		in, out := &in.NumShards, &out.NumShards
		*out = new(float64)
		**out = **in
	}
	if in.RegionConfigs != nil {
		in, out := &in.RegionConfigs, &out.RegionConfigs
		*out = make([]RegionConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationSpecsObservation.
func (in *ReplicationSpecsObservation) DeepCopy() *ReplicationSpecsObservation {
	if in == nil {
		return nil
	}
	out := new(ReplicationSpecsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationSpecsParameters) DeepCopyInto(out *ReplicationSpecsParameters) {
	*out = *in
	if in.NumShards != nil {
		in, out := &in.NumShards, &out.NumShards
		*out = new(float64)
		**out = **in
	}
	if in.RegionConfigs != nil {
		in, out := &in.RegionConfigs, &out.RegionConfigs
		*out = make([]RegionConfigsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationSpecsParameters.
func (in *ReplicationSpecsParameters) DeepCopy() *ReplicationSpecsParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicationSpecsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotBackupPolicyInitParameters) DeepCopyInto(out *SnapshotBackupPolicyInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotBackupPolicyInitParameters.
func (in *SnapshotBackupPolicyInitParameters) DeepCopy() *SnapshotBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotBackupPolicyObservation) DeepCopyInto(out *SnapshotBackupPolicyObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.NextSnapshot != nil {
		in, out := &in.NextSnapshot, &out.NextSnapshot
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]PoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReferenceHourOfDay != nil {
		in, out := &in.ReferenceHourOfDay, &out.ReferenceHourOfDay
		*out = new(float64)
		**out = **in
	}
	if in.ReferenceMinuteOfHour != nil {
		in, out := &in.ReferenceMinuteOfHour, &out.ReferenceMinuteOfHour
		*out = new(float64)
		**out = **in
	}
	if in.RestoreWindowDays != nil {
		in, out := &in.RestoreWindowDays, &out.RestoreWindowDays
		*out = new(float64)
		**out = **in
	}
	if in.UpdateSnapshots != nil {
		in, out := &in.UpdateSnapshots, &out.UpdateSnapshots
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotBackupPolicyObservation.
func (in *SnapshotBackupPolicyObservation) DeepCopy() *SnapshotBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotBackupPolicyParameters) DeepCopyInto(out *SnapshotBackupPolicyParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotBackupPolicyParameters.
func (in *SnapshotBackupPolicyParameters) DeepCopy() *SnapshotBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}
